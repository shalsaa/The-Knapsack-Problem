def knapsack(values, weights, capacity, n):
    # Inisialisasi matriks untuk menyimpan hasil submasalah
    dp = [[0 for _ in range(capacity + 1)] for _ in range(n + 1)]
    
    # Menghitung nilai maksimum yang bisa diperoleh
    for i in range(1, n + 1):
        for w in range(1, capacity + 1):
            if weights[i - 1] > w:
                dp[i][w] = dp[i - 1][w]
            else:
                dp[i][w] = max(dp[i - 1][w], values[i - 1] + dp[i - 1][w - weights[i - 1]])

    # Hasil akhir adalah nilai maksimum yang bisa diperoleh
    return dp[n][capacity]

# Contoh penggunaan program
values = [60, 100, 120]
weights = [10, 20, 30]
capacity = 50
n = len(values)

print("Nilai maksimum yang bisa diperoleh:", knapsack(values, weights, capacity, n))
